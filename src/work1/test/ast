 *ast.File {
     1  .  Doc: nil
     2  .  Package: foo:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: foo:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 5) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: *ast.CommentGroup {
    11  .  .  .  .  List: []*ast.Comment (len = 1) {
    12  .  .  .  .  .  0: *ast.Comment {
    13  .  .  .  .  .  .  Slash: foo:3:1
    14  .  .  .  .  .  .  Text: "//常规"
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  }
    18  .  .  .  TokPos: foo:4:1
    19  .  .  .  Tok: type
    20  .  .  .  Lparen: -
    21  .  .  .  Specs: []ast.Spec (len = 1) {
    22  .  .  .  .  0: *ast.TypeSpec {
    23  .  .  .  .  .  Doc: nil
    24  .  .  .  .  .  Name: *ast.Ident {
    25  .  .  .  .  .  .  NamePos: foo:4:6
    26  .  .  .  .  .  .  Name: "User"
    27  .  .  .  .  .  .  Obj: *ast.Object {
    28  .  .  .  .  .  .  .  Kind: type
    29  .  .  .  .  .  .  .  Name: "User"
    30  .  .  .  .  .  .  .  Decl: *(obj @ 22)
    31  .  .  .  .  .  .  .  Data: nil
    32  .  .  .  .  .  .  .  Type: nil
    33  .  .  .  .  .  .  }
    34  .  .  .  .  .  }
    35  .  .  .  .  .  Assign: -
    36  .  .  .  .  .  Type: *ast.StructType {
    37  .  .  .  .  .  .  Struct: foo:4:11
    38  .  .  .  .  .  .  Fields: *ast.FieldList {
    39  .  .  .  .  .  .  .  Opening: foo:4:18
    40  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    41  .  .  .  .  .  .  .  .  0: *ast.Field {
    42  .  .  .  .  .  .  .  .  .  Doc: nil
    43  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    44  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    45  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:5:2
    46  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
    47  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    48  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    49  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
    50  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 41)
    51  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
    52  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    53  .  .  .  .  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  .  .  .  .  }
    55  .  .  .  .  .  .  .  .  .  }
    56  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    57  .  .  .  .  .  .  .  .  .  .  NamePos: foo:5:7
    58  .  .  .  .  .  .  .  .  .  .  Name: "string"
    59  .  .  .  .  .  .  .  .  .  .  Obj: nil
    60  .  .  .  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  .  .  .  Tag: nil
    62  .  .  .  .  .  .  .  .  .  Comment: nil
    63  .  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  .  1: *ast.Field {
    65  .  .  .  .  .  .  .  .  .  Doc: nil
    66  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    67  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    68  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:6:2
    69  .  .  .  .  .  .  .  .  .  .  .  Name: "age"
    70  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    71  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    72  .  .  .  .  .  .  .  .  .  .  .  .  Name: "age"
    73  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 64)
    74  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
    75  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    76  .  .  .  .  .  .  .  .  .  .  .  }
    77  .  .  .  .  .  .  .  .  .  .  }
    78  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    80  .  .  .  .  .  .  .  .  .  .  NamePos: foo:6:7
    81  .  .  .  .  .  .  .  .  .  .  Name: "int"
    82  .  .  .  .  .  .  .  .  .  .  Obj: nil
    83  .  .  .  .  .  .  .  .  .  }
    84  .  .  .  .  .  .  .  .  .  Tag: nil
    85  .  .  .  .  .  .  .  .  .  Comment: nil
    86  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  .  Closing: foo:7:1
    89  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  Incomplete: false
    91  .  .  .  .  .  }
    92  .  .  .  .  .  Comment: nil
    93  .  .  .  .  }
    94  .  .  .  }
    95  .  .  .  Rparen: -
    96  .  .  }
    97  .  .  1: *ast.GenDecl {
    98  .  .  .  Doc: *ast.CommentGroup {
    99  .  .  .  .  List: []*ast.Comment (len = 1) {
   100  .  .  .  .  .  0: *ast.Comment {
   101  .  .  .  .  .  .  Slash: foo:9:1
   102  .  .  .  .  .  .  Text: "//匿名"
   103  .  .  .  .  .  }
   104  .  .  .  .  }
   105  .  .  .  }
   106  .  .  .  TokPos: foo:10:1
   107  .  .  .  Tok: type
   108  .  .  .  Lparen: -
   109  .  .  .  Specs: []ast.Spec (len = 1) {
   110  .  .  .  .  0: *ast.TypeSpec {
   111  .  .  .  .  .  Doc: nil
   112  .  .  .  .  .  Name: *ast.Ident {
   113  .  .  .  .  .  .  NamePos: foo:10:6
   114  .  .  .  .  .  .  Name: "date"
   115  .  .  .  .  .  .  Obj: *ast.Object {
   116  .  .  .  .  .  .  .  Kind: type
   117  .  .  .  .  .  .  .  Name: "date"
   118  .  .  .  .  .  .  .  Decl: *(obj @ 110)
   119  .  .  .  .  .  .  .  Data: nil
   120  .  .  .  .  .  .  .  Type: nil
   121  .  .  .  .  .  .  }
   122  .  .  .  .  .  }
   123  .  .  .  .  .  Assign: -
   124  .  .  .  .  .  Type: *ast.StructType {
   125  .  .  .  .  .  .  Struct: foo:10:11
   126  .  .  .  .  .  .  Fields: *ast.FieldList {
   127  .  .  .  .  .  .  .  Opening: foo:10:18
   128  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   129  .  .  .  .  .  .  .  .  0: *ast.Field {
   130  .  .  .  .  .  .  .  .  .  Doc: nil
   131  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
   132  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   133  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:11:2
   134  .  .  .  .  .  .  .  .  .  .  .  Name: "name1"
   135  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   136  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   137  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name1"
   138  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 129)
   139  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   140  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   141  .  .  .  .  .  .  .  .  .  .  .  }
   142  .  .  .  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   144  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:11:9
   145  .  .  .  .  .  .  .  .  .  .  .  Name: "name2"
   146  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   147  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   148  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name2"
   149  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 129)
   150  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   151  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   152  .  .  .  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  .  .  }
   155  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   156  .  .  .  .  .  .  .  .  .  .  NamePos: foo:11:15
   157  .  .  .  .  .  .  .  .  .  .  Name: "string"
   158  .  .  .  .  .  .  .  .  .  .  Obj: nil
   159  .  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  .  Tag: nil
   161  .  .  .  .  .  .  .  .  .  Comment: nil
   162  .  .  .  .  .  .  .  .  }
   163  .  .  .  .  .  .  .  .  1: *ast.Field {
   164  .  .  .  .  .  .  .  .  .  Doc: nil
   165  .  .  .  .  .  .  .  .  .  Names: nil
   166  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   167  .  .  .  .  .  .  .  .  .  .  NamePos: foo:12:2
   168  .  .  .  .  .  .  .  .  .  .  Name: "string"
   169  .  .  .  .  .  .  .  .  .  .  Obj: nil
   170  .  .  .  .  .  .  .  .  .  }
   171  .  .  .  .  .  .  .  .  .  Tag: nil
   172  .  .  .  .  .  .  .  .  .  Comment: nil
   173  .  .  .  .  .  .  .  .  }
   174  .  .  .  .  .  .  .  }
   175  .  .  .  .  .  .  .  Closing: foo:13:1
   176  .  .  .  .  .  .  }
   177  .  .  .  .  .  .  Incomplete: false
   178  .  .  .  .  .  }
   179  .  .  .  .  .  Comment: nil
   180  .  .  .  .  }
   181  .  .  .  }
   182  .  .  .  Rparen: -
   183  .  .  }
   184  .  .  2: *ast.GenDecl {
   185  .  .  .  Doc: *ast.CommentGroup {
   186  .  .  .  .  List: []*ast.Comment (len = 1) {
   187  .  .  .  .  .  0: *ast.Comment {
   188  .  .  .  .  .  .  Slash: foo:15:1
   189  .  .  .  .  .  .  Text: "//嵌套"
   190  .  .  .  .  .  }
   191  .  .  .  .  }
   192  .  .  .  }
   193  .  .  .  TokPos: foo:16:1
   194  .  .  .  Tok: type
   195  .  .  .  Lparen: -
   196  .  .  .  Specs: []ast.Spec (len = 1) {
   197  .  .  .  .  0: *ast.TypeSpec {
   198  .  .  .  .  .  Doc: nil
   199  .  .  .  .  .  Name: *ast.Ident {
   200  .  .  .  .  .  .  NamePos: foo:16:6
   201  .  .  .  .  .  .  Name: "test"
   202  .  .  .  .  .  .  Obj: *ast.Object {
   203  .  .  .  .  .  .  .  Kind: type
   204  .  .  .  .  .  .  .  Name: "test"
   205  .  .  .  .  .  .  .  Decl: *(obj @ 197)
   206  .  .  .  .  .  .  .  Data: nil
   207  .  .  .  .  .  .  .  Type: nil
   208  .  .  .  .  .  .  }
   209  .  .  .  .  .  }
   210  .  .  .  .  .  Assign: -
   211  .  .  .  .  .  Type: *ast.StructType {
   212  .  .  .  .  .  .  Struct: foo:16:11
   213  .  .  .  .  .  .  Fields: *ast.FieldList {
   214  .  .  .  .  .  .  .  Opening: foo:16:18
   215  .  .  .  .  .  .  .  List: []*ast.Field (len = 3) {
   216  .  .  .  .  .  .  .  .  0: *ast.Field {
   217  .  .  .  .  .  .  .  .  .  Doc: nil
   218  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   219  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   220  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:17:2
   221  .  .  .  .  .  .  .  .  .  .  .  Name: "user1"
   222  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   223  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   224  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user1"
   225  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 216)
   226  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   227  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   228  .  .  .  .  .  .  .  .  .  .  .  }
   229  .  .  .  .  .  .  .  .  .  .  }
   230  .  .  .  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   232  .  .  .  .  .  .  .  .  .  .  Star: foo:17:8
   233  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   234  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:17:9
   235  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
   236  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 27)
   237  .  .  .  .  .  .  .  .  .  .  }
   238  .  .  .  .  .  .  .  .  .  }
   239  .  .  .  .  .  .  .  .  .  Tag: nil
   240  .  .  .  .  .  .  .  .  .  Comment: nil
   241  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  1: *ast.Field {
   243  .  .  .  .  .  .  .  .  .  Doc: nil
   244  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   245  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   246  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:18:2
   247  .  .  .  .  .  .  .  .  .  .  .  Name: "user2"
   248  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   249  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   250  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user2"
   251  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 242)
   252  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   253  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   254  .  .  .  .  .  .  .  .  .  .  .  }
   255  .  .  .  .  .  .  .  .  .  .  }
   256  .  .  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   258  .  .  .  .  .  .  .  .  .  .  NamePos: foo:18:8
   259  .  .  .  .  .  .  .  .  .  .  Name: "User"
   260  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 27)
   261  .  .  .  .  .  .  .  .  .  }
   262  .  .  .  .  .  .  .  .  .  Tag: nil
   263  .  .  .  .  .  .  .  .  .  Comment: nil
   264  .  .  .  .  .  .  .  .  }
   265  .  .  .  .  .  .  .  .  2: *ast.Field {
   266  .  .  .  .  .  .  .  .  .  Doc: nil
   267  .  .  .  .  .  .  .  .  .  Names: nil
   268  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   269  .  .  .  .  .  .  .  .  .  .  NamePos: foo:19:2
   270  .  .  .  .  .  .  .  .  .  .  Name: "date"
   271  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 115)
   272  .  .  .  .  .  .  .  .  .  }
   273  .  .  .  .  .  .  .  .  .  Tag: nil
   274  .  .  .  .  .  .  .  .  .  Comment: nil
   275  .  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  }
   277  .  .  .  .  .  .  .  Closing: foo:20:1
   278  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  Incomplete: false
   280  .  .  .  .  .  }
   281  .  .  .  .  .  Comment: nil
   282  .  .  .  .  }
   283  .  .  .  }
   284  .  .  .  Rparen: -
   285  .  .  }
   286  .  .  3: *ast.GenDecl {
   287  .  .  .  Doc: *ast.CommentGroup {
   288  .  .  .  .  List: []*ast.Comment (len = 1) {
   289  .  .  .  .  .  0: *ast.Comment {
   290  .  .  .  .  .  .  Slash: foo:22:1
   291  .  .  .  .  .  .  Text: "//组合"
   292  .  .  .  .  .  }
   293  .  .  .  .  }
   294  .  .  .  }
   295  .  .  .  TokPos: foo:23:1
   296  .  .  .  Tok: type
   297  .  .  .  Lparen: foo:23:6
   298  .  .  .  Specs: []ast.Spec (len = 2) {
   299  .  .  .  .  0: *ast.TypeSpec {
   300  .  .  .  .  .  Doc: nil
   301  .  .  .  .  .  Name: *ast.Ident {
   302  .  .  .  .  .  .  NamePos: foo:24:2
   303  .  .  .  .  .  .  Name: "man"
   304  .  .  .  .  .  .  Obj: *ast.Object {
   305  .  .  .  .  .  .  .  Kind: type
   306  .  .  .  .  .  .  .  Name: "man"
   307  .  .  .  .  .  .  .  Decl: *(obj @ 299)
   308  .  .  .  .  .  .  .  Data: nil
   309  .  .  .  .  .  .  .  Type: nil
   310  .  .  .  .  .  .  }
   311  .  .  .  .  .  }
   312  .  .  .  .  .  Assign: -
   313  .  .  .  .  .  Type: *ast.StructType {
   314  .  .  .  .  .  .  Struct: foo:24:6
   315  .  .  .  .  .  .  Fields: *ast.FieldList {
   316  .  .  .  .  .  .  .  Opening: foo:24:13
   317  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   318  .  .  .  .  .  .  .  .  0: *ast.Field {
   319  .  .  .  .  .  .  .  .  .  Doc: nil
   320  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   321  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   322  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:25:3
   323  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
   324  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   325  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   326  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
   327  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 318)
   328  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   329  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   330  .  .  .  .  .  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  .  .  .  }
   333  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   334  .  .  .  .  .  .  .  .  .  .  NamePos: foo:25:8
   335  .  .  .  .  .  .  .  .  .  .  Name: "string"
   336  .  .  .  .  .  .  .  .  .  .  Obj: nil
   337  .  .  .  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  .  .  .  Tag: nil
   339  .  .  .  .  .  .  .  .  .  Comment: nil
   340  .  .  .  .  .  .  .  .  }
   341  .  .  .  .  .  .  .  .  1: *ast.Field {
   342  .  .  .  .  .  .  .  .  .  Doc: nil
   343  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   344  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   345  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:26:3
   346  .  .  .  .  .  .  .  .  .  .  .  Name: "age"
   347  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   348  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   349  .  .  .  .  .  .  .  .  .  .  .  .  Name: "age"
   350  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 341)
   351  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   352  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   353  .  .  .  .  .  .  .  .  .  .  .  }
   354  .  .  .  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   357  .  .  .  .  .  .  .  .  .  .  NamePos: foo:26:8
   358  .  .  .  .  .  .  .  .  .  .  Name: "int"
   359  .  .  .  .  .  .  .  .  .  .  Obj: nil
   360  .  .  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  .  .  .  Tag: nil
   362  .  .  .  .  .  .  .  .  .  Comment: nil
   363  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  }
   365  .  .  .  .  .  .  .  Closing: foo:27:2
   366  .  .  .  .  .  .  }
   367  .  .  .  .  .  .  Incomplete: false
   368  .  .  .  .  .  }
   369  .  .  .  .  .  Comment: nil
   370  .  .  .  .  }
   371  .  .  .  .  1: *ast.TypeSpec {
   372  .  .  .  .  .  Doc: nil
   373  .  .  .  .  .  Name: *ast.Ident {
   374  .  .  .  .  .  .  NamePos: foo:28:2
   375  .  .  .  .  .  .  Name: "woman"
   376  .  .  .  .  .  .  Obj: *ast.Object {
   377  .  .  .  .  .  .  .  Kind: type
   378  .  .  .  .  .  .  .  Name: "woman"
   379  .  .  .  .  .  .  .  Decl: *(obj @ 371)
   380  .  .  .  .  .  .  .  Data: nil
   381  .  .  .  .  .  .  .  Type: nil
   382  .  .  .  .  .  .  }
   383  .  .  .  .  .  }
   384  .  .  .  .  .  Assign: -
   385  .  .  .  .  .  Type: *ast.StructType {
   386  .  .  .  .  .  .  Struct: foo:28:8
   387  .  .  .  .  .  .  Fields: *ast.FieldList {
   388  .  .  .  .  .  .  .  Opening: foo:28:15
   389  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   390  .  .  .  .  .  .  .  .  0: *ast.Field {
   391  .  .  .  .  .  .  .  .  .  Doc: nil
   392  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   393  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   394  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:29:3
   395  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
   396  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   397  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   398  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
   399  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 390)
   400  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   401  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   402  .  .  .  .  .  .  .  .  .  .  .  }
   403  .  .  .  .  .  .  .  .  .  .  }
   404  .  .  .  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   406  .  .  .  .  .  .  .  .  .  .  NamePos: foo:29:8
   407  .  .  .  .  .  .  .  .  .  .  Name: "string"
   408  .  .  .  .  .  .  .  .  .  .  Obj: nil
   409  .  .  .  .  .  .  .  .  .  }
   410  .  .  .  .  .  .  .  .  .  Tag: nil
   411  .  .  .  .  .  .  .  .  .  Comment: nil
   412  .  .  .  .  .  .  .  .  }
   413  .  .  .  .  .  .  .  .  1: *ast.Field {
   414  .  .  .  .  .  .  .  .  .  Doc: nil
   415  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   416  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   417  .  .  .  .  .  .  .  .  .  .  .  NamePos: foo:30:3
   418  .  .  .  .  .  .  .  .  .  .  .  Name: "age"
   419  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   420  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   421  .  .  .  .  .  .  .  .  .  .  .  .  Name: "age"
   422  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 413)
   423  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   424  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   425  .  .  .  .  .  .  .  .  .  .  .  }
   426  .  .  .  .  .  .  .  .  .  .  }
   427  .  .  .  .  .  .  .  .  .  }
   428  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   429  .  .  .  .  .  .  .  .  .  .  NamePos: foo:30:8
   430  .  .  .  .  .  .  .  .  .  .  Name: "int"
   431  .  .  .  .  .  .  .  .  .  .  Obj: nil
   432  .  .  .  .  .  .  .  .  .  }
   433  .  .  .  .  .  .  .  .  .  Tag: nil
   434  .  .  .  .  .  .  .  .  .  Comment: nil
   435  .  .  .  .  .  .  .  .  }
   436  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  Closing: foo:31:2
   438  .  .  .  .  .  .  }
   439  .  .  .  .  .  .  Incomplete: false
   440  .  .  .  .  .  }
   441  .  .  .  .  .  Comment: nil
   442  .  .  .  .  }
   443  .  .  .  }
   444  .  .  .  Rparen: foo:32:1
   445  .  .  }
   446  .  .  4: *ast.FuncDecl {
   447  .  .  .  Doc: nil
   448  .  .  .  Recv: nil
   449  .  .  .  Name: *ast.Ident {
   450  .  .  .  .  NamePos: foo:34:6
   451  .  .  .  .  Name: "main"
   452  .  .  .  .  Obj: *ast.Object {
   453  .  .  .  .  .  Kind: func
   454  .  .  .  .  .  Name: "main"
   455  .  .  .  .  .  Decl: *(obj @ 446)
   456  .  .  .  .  .  Data: nil
   457  .  .  .  .  .  Type: nil
   458  .  .  .  .  }
   459  .  .  .  }
   460  .  .  .  Type: *ast.FuncType {
   461  .  .  .  .  Func: foo:34:1
   462  .  .  .  .  Params: *ast.FieldList {
   463  .  .  .  .  .  Opening: foo:34:10
   464  .  .  .  .  .  List: nil
   465  .  .  .  .  .  Closing: foo:34:11
   466  .  .  .  .  }
   467  .  .  .  .  Results: nil
   468  .  .  .  }
   469  .  .  .  Body: *ast.BlockStmt {
   470  .  .  .  .  Lbrace: foo:34:13
   471  .  .  .  .  List: nil
   472  .  .  .  .  Rbrace: foo:35:1
   473  .  .  .  }
   474  .  .  }
   475  .  }
   476  .  Scope: *ast.Scope {
   477  .  .  Outer: nil
   478  .  .  Objects: map[string]*ast.Object (len = 6) {
   479  .  .  .  "man": *(obj @ 304)
   480  .  .  .  "woman": *(obj @ 376)
   481  .  .  .  "main": *(obj @ 452)
   482  .  .  .  "User": *(obj @ 27)
   483  .  .  .  "date": *(obj @ 115)
   484  .  .  .  "test": *(obj @ 202)
   485  .  .  }
   486  .  }
   487  .  Imports: nil
   488  .  Unresolved: []*ast.Ident (len = 8) {
   489  .  .  0: *(obj @ 56)
   490  .  .  1: *(obj @ 79)
   491  .  .  2: *(obj @ 155)
   492  .  .  3: *(obj @ 166)
   493  .  .  4: *(obj @ 333)
   494  .  .  5: *(obj @ 356)
   495  .  .  6: *(obj @ 405)
   496  .  .  7: *(obj @ 428)
   497  .  }
   498  .  Comments: []*ast.CommentGroup (len = 4) {
   499  .  .  0: *(obj @ 10)
   500  .  .  1: *(obj @ 98)
   501  .  .  2: *(obj @ 185)
   502  .  .  3: *(obj @ 287)
   503  .  }
   504  }
 